{% extends_admingenerated "NitraTopsBundle:OrdersList:index.html.twig" %}

    {% block javascript_head %}
    {{ parent() }}
<script type="text/javascript">


    /**
     * обновление строки TR данных заказа
     * @param integer orderId - ID идентификатор заказа
     **/
    function renderTr(orderId) {
        // ID идентификатор заказа
        var orderId = parseInt(orderId);
        // url контроллер получение html данных строки заказа

       var actionUrl =  ""+orderId+"-render-tr";
{#        var actionUrl = "{{ path('Nitra_TopsBundle_Orders_Render_Tr',{ pk: 1 })}}";#}

        // отправить ajax запрос на получаение данных по строке заказа
        $.ajax(actionUrl, {
            dataType: 'html',
            success: function(data) {
                $('#tr_order_id' + orderId).replaceWith(data);

                $('.colorbox').colorbox();

                // Popup box
                $('.popup').each(function() {
                    $(this).html('<div class="popup_content">' + $(this).html() + '</div>');
                    $(this).prepend('<div class="popup_arrow"></div>');
                    $(this).addClass('popup_ready');
                })
                $('.popup .popup_arrow').click(function() {
                    $(this).parent('div.popup').toggleClass('popup_active');
                    $('.popup').not($(this).parent('div.popup')).removeClass('popup_active');
                });
            }
        });
  
    }


    /**
     * добавление нового товара
     **/
    function setOEStatus(orderId, orderEntryId, toStatus) {


        // проверить параметр orderId
        if (typeof (orderId) == 'undefined') {
            console.error("Не указан параметр идентификатор заказа.");
            return false;
        }

        // проверить параметр orderEntryId
        if (typeof (orderEntryId) == 'undefined') {
            console.error("Не указан параметр идентификатор позиции заказа.");
            return false;
        }

        // проверить параметр toStatus
        if (typeof (toStatus) == 'undefined') {
            console.error("Не указан параметр название метода нового статуса позиции заказа.");
            return false;
        }

        var url = "{{ path('Nitra_TopsBundle_Post_Change_Status_Order_Entry')}}";
        var fromServer = '';
        $.ajax({
            type: "POST",
            url: url,
            data: {
                orderEntryId: orderEntryId,
                orderId: orderId,
                toStatus: toStatus
            },
            success: function(jqXHR, textStatus, errorThrown) {
                renderTr(orderId);


            }
            ,
            error: function(jqXHR, textStatus, errorThrown) {
                alert('Ошибка при переводе статуса позиции');

            }


        }
        );

    }


    function setStatus(orderId, toStatus) {


        // проверить параметр orderId
        if (typeof (orderId) == 'undefined') {
            console.error("Не указан параметр идентификатор заказа.");
            return false;
        }

        // проверить параметр toStatus
        if (typeof (toStatus) == 'undefined') {
            console.error("Не указан параметр название метода нового статуса позиции заказа.");
            return false;
        }

        var url = "{{ path('Nitra_TopsBundle_Post_Change_Status_Order')}}";
        var fromServer = '';
        $.ajax({
            type: "POST",
            url: url,
            data: {
                orderId: orderId,
                toStatus: toStatus
            },
            success: function(jqXHR, textStatus, errorThrown) {
                renderTr(orderId)


            }
            ,
            error: function(jqXHR, textStatus, errorThrown) {
                alert('Ошибка при переводе статуса позиции');

            }


        }
        );

    }


</script>

{% endblock %}